import { BigNumber } from '../../configured_bignumber';
import { RevertError } from '../../revert_error';
export declare class UnregisteredAssetProxyError extends RevertError {
    constructor();
}
export declare class UnsupportedAssetProxyError extends RevertError {
    constructor(proxyId?: string);
}
export declare class CompleteBuyFailedError extends RevertError {
    constructor(expectedAssetBuyAmount?: BigNumber | number | string, actualAssetBuyAmount?: BigNumber | number | string);
}
export declare class UnsupportedFeeError extends RevertError {
    constructor(takerFeeAssetData?: string);
}
export declare class FeePercentageTooLargeError extends RevertError {
    constructor(feePercentage?: BigNumber | number | string);
}
export declare class InsufficientEthForFeeError extends RevertError {
    constructor(ethFeeRequired?: BigNumber | number | string, ethAvailable?: BigNumber | number | string);
}
export declare class OverspentWethError extends RevertError {
    constructor(wethSpent?: BigNumber | number | string, msgValue?: BigNumber | number | string);
}
export declare class DefaultFunctionWethContractOnlyError extends RevertError {
    constructor(senderAddress?: string);
}
export declare class MsgValueCannotEqualZeroError extends RevertError {
    constructor();
}
export declare class Erc721AmountMustEqualOneError extends RevertError {
    constructor(amount?: BigNumber | number | string);
}
//# sourceMappingURL=revert_errors.d.ts.map