"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var e_1, _a;
var revert_error_1 = require("../../revert_error");
// tslint:disable:max-classes-per-file
var UnregisteredAssetProxyError = /** @class */ (function (_super) {
    __extends(UnregisteredAssetProxyError, _super);
    function UnregisteredAssetProxyError() {
        return _super.call(this, 'UnregisteredAssetProxyError', 'UnregisteredAssetProxyError()', {}) || this;
    }
    return UnregisteredAssetProxyError;
}(revert_error_1.RevertError));
exports.UnregisteredAssetProxyError = UnregisteredAssetProxyError;
var UnsupportedAssetProxyError = /** @class */ (function (_super) {
    __extends(UnsupportedAssetProxyError, _super);
    function UnsupportedAssetProxyError(proxyId) {
        return _super.call(this, 'UnsupportedAssetProxyError', 'UnsupportedAssetProxyError(bytes4 proxyId)', { proxyId: proxyId }) || this;
    }
    return UnsupportedAssetProxyError;
}(revert_error_1.RevertError));
exports.UnsupportedAssetProxyError = UnsupportedAssetProxyError;
var CompleteBuyFailedError = /** @class */ (function (_super) {
    __extends(CompleteBuyFailedError, _super);
    function CompleteBuyFailedError(expectedAssetBuyAmount, actualAssetBuyAmount) {
        return _super.call(this, 'CompleteBuyFailedError', 'CompleteBuyFailedError(uint256 expectedAssetBuyAmount, uint256 actualAssetBuyAmount)', { expectedAssetBuyAmount: expectedAssetBuyAmount, actualAssetBuyAmount: actualAssetBuyAmount }) || this;
    }
    return CompleteBuyFailedError;
}(revert_error_1.RevertError));
exports.CompleteBuyFailedError = CompleteBuyFailedError;
var UnsupportedFeeError = /** @class */ (function (_super) {
    __extends(UnsupportedFeeError, _super);
    function UnsupportedFeeError(takerFeeAssetData) {
        return _super.call(this, 'UnsupportedFeeError', 'UnsupportedFeeError(bytes takerFeeAssetData)', { takerFeeAssetData: takerFeeAssetData }) || this;
    }
    return UnsupportedFeeError;
}(revert_error_1.RevertError));
exports.UnsupportedFeeError = UnsupportedFeeError;
var FeePercentageTooLargeError = /** @class */ (function (_super) {
    __extends(FeePercentageTooLargeError, _super);
    function FeePercentageTooLargeError(feePercentage) {
        return _super.call(this, 'FeePercentageTooLargeError', 'FeePercentageTooLargeError(uint256 feePercentage)', {
            feePercentage: feePercentage,
        }) || this;
    }
    return FeePercentageTooLargeError;
}(revert_error_1.RevertError));
exports.FeePercentageTooLargeError = FeePercentageTooLargeError;
var InsufficientEthForFeeError = /** @class */ (function (_super) {
    __extends(InsufficientEthForFeeError, _super);
    function InsufficientEthForFeeError(ethFeeRequired, ethAvailable) {
        return _super.call(this, 'InsufficientEthForFeeError', 'InsufficientEthForFeeError(uint256 ethFeeRequired, uint256 ethAvailable)', { ethFeeRequired: ethFeeRequired, ethAvailable: ethAvailable }) || this;
    }
    return InsufficientEthForFeeError;
}(revert_error_1.RevertError));
exports.InsufficientEthForFeeError = InsufficientEthForFeeError;
var OverspentWethError = /** @class */ (function (_super) {
    __extends(OverspentWethError, _super);
    function OverspentWethError(wethSpent, msgValue) {
        return _super.call(this, 'OverspentWethError', 'OverspentWethError(uint256 wethSpent, uint256 msgValue)', {
            wethSpent: wethSpent,
            msgValue: msgValue,
        }) || this;
    }
    return OverspentWethError;
}(revert_error_1.RevertError));
exports.OverspentWethError = OverspentWethError;
var DefaultFunctionWethContractOnlyError = /** @class */ (function (_super) {
    __extends(DefaultFunctionWethContractOnlyError, _super);
    function DefaultFunctionWethContractOnlyError(senderAddress) {
        return _super.call(this, 'DefaultFunctionWethContractOnlyError', 'DefaultFunctionWethContractOnlyError(address senderAddress)', {
            senderAddress: senderAddress,
        }) || this;
    }
    return DefaultFunctionWethContractOnlyError;
}(revert_error_1.RevertError));
exports.DefaultFunctionWethContractOnlyError = DefaultFunctionWethContractOnlyError;
var MsgValueCannotEqualZeroError = /** @class */ (function (_super) {
    __extends(MsgValueCannotEqualZeroError, _super);
    function MsgValueCannotEqualZeroError() {
        return _super.call(this, 'MsgValueCannotEqualZeroError', 'MsgValueCannotEqualZeroError()', {}) || this;
    }
    return MsgValueCannotEqualZeroError;
}(revert_error_1.RevertError));
exports.MsgValueCannotEqualZeroError = MsgValueCannotEqualZeroError;
var Erc721AmountMustEqualOneError = /** @class */ (function (_super) {
    __extends(Erc721AmountMustEqualOneError, _super);
    function Erc721AmountMustEqualOneError(amount) {
        return _super.call(this, 'Erc721AmountMustEqualOneError', 'Erc721AmountMustEqualOneError(uint256 amount)', {
            amount: amount,
        }) || this;
    }
    return Erc721AmountMustEqualOneError;
}(revert_error_1.RevertError));
exports.Erc721AmountMustEqualOneError = Erc721AmountMustEqualOneError;
var types = [
    UnregisteredAssetProxyError,
    UnsupportedAssetProxyError,
    CompleteBuyFailedError,
    UnsupportedFeeError,
    FeePercentageTooLargeError,
    InsufficientEthForFeeError,
    OverspentWethError,
    DefaultFunctionWethContractOnlyError,
    MsgValueCannotEqualZeroError,
    Erc721AmountMustEqualOneError,
];
try {
    // Register the types we've defined.
    for (var types_1 = __values(types), types_1_1 = types_1.next(); !types_1_1.done; types_1_1 = types_1.next()) {
        var type = types_1_1.value;
        revert_error_1.RevertError.registerType(type);
    }
}
catch (e_1_1) { e_1 = { error: e_1_1 }; }
finally {
    try {
        if (types_1_1 && !types_1_1.done && (_a = types_1.return)) _a.call(types_1);
    }
    finally { if (e_1) throw e_1.error; }
}
//# sourceMappingURL=revert_errors.js.map