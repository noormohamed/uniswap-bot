import { Environment } from '../../../Environment';
import { Address } from '../../../Address';
import { Contract } from '../../../Contract';
export declare class ERC20WithFields extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address): import("../../..").Deployment<ERC20WithFields>;
    /**
     * Gets the balance of an owner.
     *
     * @param who The address of the one we want to check the balance of.
     * @param block The block number to execute the call on.
     */
    getBalanceOf(who: Address, block?: number): Promise<import("bignumber.js").default>;
    /**
     * Gets the ammount of token that an owner allows a spender to use.
     *
     * @param owner The owner address.
     * @param spender The spender address.
     * @param block The block number to execute the call on.
     */
    getAllowance(owner: Address, spender: Address, block?: number): Promise<import("bignumber.js").default>;
    /**
     * Gets the total supply of the token.
     *
     * @param block The block number to execute the call on.
     */
    getTotalSupply(block?: number): Promise<import("bignumber.js").default>;
    /**
     * Gets the name of the token.
     *
     * @param block The block number to execute the call on.
     */
    getName(block?: number): Promise<string>;
    /**
     * Gets the symbol of the token.
     *
     * @param block The block number to execute the call on.
     */
    getSymbol(block?: number): Promise<string>;
    /**
     * Gets the decimals of the token.
     *
     * @param block The block number to execute the call on.
     */
    getDecimals(block?: number): Promise<number>;
}
