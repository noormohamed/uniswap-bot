import { ValidationError } from '../../errors/ValidationError';
import { Address } from '../../Address';
export declare class ComponentNotSetError extends ValidationError {
    readonly name = "ComponentNotSetError";
    constructor(message?: string);
}
export declare class ComponentAlreadySetError extends ValidationError {
    readonly address: Address;
    readonly name = "ComponentAlreadySetError";
    constructor(address: Address, message?: string);
}
export declare class DenominationAssetNotRegisteredError extends ValidationError {
    readonly name = "DenominationAssetNotRegisteredError";
    constructor(message?: string);
}
export declare class FundSetupAlreadyCompleteError extends ValidationError {
    readonly name = "FundSetupAlreadyCompleteError";
    constructor(message?: string);
}
export declare class FundSetupAlreadyStartedError extends ValidationError {
    readonly name = "FundSetupAlreadyStartedError";
    constructor(message?: string);
}
export declare class DifferentNumberOfExchangesAndAdaptersError extends ValidationError {
    readonly name = "DifferentNumberOfExchangesAndAdaptersError";
    constructor(message?: string);
}
