"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ValidationError_1 = require("../../errors/ValidationError");
class ComponentNotSetError extends ValidationError_1.ValidationError {
    constructor(message = 'Component has not been set yet.') {
        super(message);
        this.name = 'ComponentNotSetError';
    }
}
exports.ComponentNotSetError = ComponentNotSetError;
class ComponentAlreadySetError extends ValidationError_1.ValidationError {
    constructor(address, message = 'Component has already been set.') {
        super(message);
        this.address = address;
        this.name = 'ComponentAlreadySetError';
    }
}
exports.ComponentAlreadySetError = ComponentAlreadySetError;
class DenominationAssetNotRegisteredError extends ValidationError_1.ValidationError {
    constructor(message = 'Denomination asset must be registered.') {
        super(message);
        this.name = 'DenominationAssetNotRegisteredError';
    }
}
exports.DenominationAssetNotRegisteredError = DenominationAssetNotRegisteredError;
class FundSetupAlreadyCompleteError extends ValidationError_1.ValidationError {
    constructor(message = 'Setup already complete.') {
        super(message);
        this.name = 'FundSetupAlreadyCompleteError';
    }
}
exports.FundSetupAlreadyCompleteError = FundSetupAlreadyCompleteError;
class FundSetupAlreadyStartedError extends ValidationError_1.ValidationError {
    constructor(message = 'Fund setup has already been started.') {
        super(message);
        this.name = 'FundSetupAlreadyStartedError';
    }
}
exports.FundSetupAlreadyStartedError = FundSetupAlreadyStartedError;
class DifferentNumberOfExchangesAndAdaptersError extends ValidationError_1.ValidationError {
    constructor(message = 'Route has already been created.') {
        super(message);
        this.name = 'DifferentNumberOfExchangesAndAdaptersError';
    }
}
exports.DifferentNumberOfExchangesAndAdaptersError = DifferentNumberOfExchangesAndAdaptersError;
