import BigNumber from 'bignumber.js';
import { Contract } from '../../../../Contract';
import { Environment } from '../../../../Environment';
import { Address } from '../../../../Address';
import { Order } from '@0x/order-utils-v2';
export interface ZeroExV2Order extends Order {
}
export declare enum ZeroExV2OrderStatus {
    INVALID = 0,
    INVALID_MAKER_ASSET_AMOUNT = 1,
    INVALID_TAKER_ASSET_AMOUNT = 2,
    FILLABLE = 3,
    EXPIRED = 4,
    FULLY_FILLED = 5,
    CANCELLED = 6
}
export interface ZeroExV2OrderInfo {
    orderStatus: ZeroExV2OrderStatus;
    orderHash: string;
    orderTakerAssetFilledAmount: BigNumber;
}
export declare class ZeroExV2Exchange extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address, closetime: BigNumber): import("../../../..").Deployment<ZeroExV2Exchange>;
    /**
     * Gets the order info.
     *
     * @param order The order object.
     * @param block The block number to execute the call on.
     */
    getOrderInfo(order: ZeroExV2Order, block?: number): Promise<any>;
}
