"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Contract_1 = require("../../../../Contract");
const ZeroExV3Exchange_abi_1 = require("../../../../abis/ZeroExV3Exchange.abi");
var ZeroExV3OrderStatus;
(function (ZeroExV3OrderStatus) {
    ZeroExV3OrderStatus[ZeroExV3OrderStatus["INVALID"] = 0] = "INVALID";
    ZeroExV3OrderStatus[ZeroExV3OrderStatus["INVALID_MAKER_ASSET_AMOUNT"] = 1] = "INVALID_MAKER_ASSET_AMOUNT";
    ZeroExV3OrderStatus[ZeroExV3OrderStatus["INVALID_TAKER_ASSET_AMOUNT"] = 2] = "INVALID_TAKER_ASSET_AMOUNT";
    ZeroExV3OrderStatus[ZeroExV3OrderStatus["FILLABLE"] = 3] = "FILLABLE";
    ZeroExV3OrderStatus[ZeroExV3OrderStatus["EXPIRED"] = 4] = "EXPIRED";
    ZeroExV3OrderStatus[ZeroExV3OrderStatus["FULLY_FILLED"] = 5] = "FULLY_FILLED";
    ZeroExV3OrderStatus[ZeroExV3OrderStatus["CANCELLED"] = 6] = "CANCELLED";
})(ZeroExV3OrderStatus = exports.ZeroExV3OrderStatus || (exports.ZeroExV3OrderStatus = {}));
class ZeroExV3Exchange extends Contract_1.Contract {
    static deploy(environment, bytecode, from, closetime) {
        return super.createDeployment(environment, bytecode, from, [closetime.toFixed(0)]);
    }
    /**
     * Gets the order info.
     *
     * @param order The order object.
     * @param block The block number to execute the call on.
     */
    getOrderInfo(order, block) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeCall('getOrderInfo', [order], block);
        });
    }
}
exports.ZeroExV3Exchange = ZeroExV3Exchange;
ZeroExV3Exchange.abi = ZeroExV3Exchange_abi_1.ZeroExV3ExchangeAbi;
