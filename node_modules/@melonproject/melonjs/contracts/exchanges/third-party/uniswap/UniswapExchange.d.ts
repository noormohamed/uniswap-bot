import { Contract } from '../../../../Contract';
import { Environment } from '../../../../Environment';
import { Address } from '../../../../Address';
import BigNumber from 'bignumber.js';
export declare class UniswapExchange extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address): import("../../../..").Deployment<UniswapExchange>;
    /**
     * Gets the input price for a swap from ETH to token
     *
     * @param ethSold The amount of ETH sold (in wei)
     * @param block The block number to execute the call on.
     */
    getEthToTokenInputPrice(ethSold: BigNumber, block?: number): Promise<BigNumber>;
    /**
     * Gets the input price for a swap from token to ETH
     *
     * @param tokensSold The amount of token sold (in base unit)
     * @param block The block number to execute the call on.
     */
    getTokenToEthInputPrice(tokensBought: BigNumber, block?: number): Promise<BigNumber>;
}
