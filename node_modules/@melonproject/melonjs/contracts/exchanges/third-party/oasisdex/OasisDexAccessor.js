"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Contract_1 = require("../../../../Contract");
const OasisDexAccessor_abi_1 = require("../../../../abis/OasisDexAccessor.abi");
const toBigNumber_1 = require("../../../../utils/toBigNumber");
class OasisDexAccessor extends Contract_1.Contract {
    static deploy(environment, bytecode, from) {
        return super.createDeployment(environment, bytecode, from);
    }
    /**
     * Gets current market orders for a given asset pair.
     *
     * @param targetExchange The address of the exchange.
     * @param sellAsset The sell asset address.
     * @param buyAsset The buy asset address.
     * @param block The block number to execute the call on.
     */
    getOrders(targetExchange, sellAsset, buyAsset, block) {
        return __awaiter(this, void 0, void 0, function* () {
            const { '0': ids, '1': sellQtys, '2': buyQtys } = yield this.makeCall('getOrders', [targetExchange, sellAsset, buyAsset], block);
            return (ids || []).map((id, index) => ({
                id: toBigNumber_1.toBigNumber(id),
                sellQuantity: toBigNumber_1.toBigNumber(sellQtys[index]),
                buyQuantity: toBigNumber_1.toBigNumber(buyQtys[index]),
            }));
        });
    }
}
exports.OasisDexAccessor = OasisDexAccessor;
OasisDexAccessor.abi = OasisDexAccessor_abi_1.OasisDexAccessorAbi;
