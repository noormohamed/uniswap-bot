import { Contract } from '../../../../Contract';
import { Environment } from '../../../../Environment';
import { Address } from '../../../../Address';
import BigNumber from 'bignumber.js';
export interface OasisDexOffer {
    makerQuantity: BigNumber;
    makerAsset: Address;
    takerQuantity: BigNumber;
    takerAsset: Address;
    owner: Address;
    timestamp: Date;
}
export declare class OasisDexExchange extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address, closetime: BigNumber): import("../../../..").Deployment<OasisDexExchange>;
    /**
     * Gets the details of an offer
     *
     * @param id The id of the offer
     * @param block The block number to execute the call on.
     */
    getOffer(id: BigNumber, block?: number): Promise<OasisDexOffer>;
    /**
     * Checks whether an offer is active
     *
     * @param id The id of the offer
     * @param block The block number to execute the call on.
     */
    isActive(id: BigNumber, block?: number): Promise<boolean>;
    /**
     * Gets the owner of an offer
     *
     * @param id The id of the offer
     * @param block The block number to execute the call on.
     */
    getOwner(id: BigNumber, block?: number): Promise<string>;
    /**
     * Checks whether an offer is closed
     *
     * @param block The block number to execute the call on.
     */
    isClosed(block?: number): Promise<boolean>;
}
