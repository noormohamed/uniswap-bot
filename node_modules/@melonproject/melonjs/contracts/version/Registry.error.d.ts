import { Address } from '../../Address';
import { ValidationError } from '../../errors/ValidationError';
export declare class ExchangeAdapterAlreadyRegisteredError extends ValidationError {
    readonly adapter: Address;
    name: string;
    constructor(adapter: Address, message?: string);
}
export declare class ExchangeAdapterNotRegisteredError extends ValidationError {
    readonly adapter: Address;
    name: string;
    constructor(adapter: Address, message?: string);
}
export declare class ExchangeAdaptersRegisteredOutOfBoundsError extends ValidationError {
    readonly numberOfAdapters: number;
    readonly maxRegisteredAdapters: number;
    name: string;
    constructor(numberOfAdapters: number, maxRegisteredAdapters: number, message?: string);
}
export declare class ExchangeAndAdapterDoNotMatchError extends ValidationError {
    readonly exchange: Address;
    readonly adapter: Address;
    name: string;
    constructor(exchange: Address, adapter: Address, message?: string);
}
export declare class InvalidFundNameError extends ValidationError {
    readonly fundName: string;
    name: string;
    constructor(fundName: string, message?: string);
}
export declare class CannotUseFundNameError extends ValidationError {
    readonly fundName: string;
    name: string;
    constructor(fundName: string, message?: string);
}
export declare class VersionAlreadyRegisteredError extends ValidationError {
    name: string;
    constructor(message?: string);
}
export declare class VersionNameAlreadyExistsError extends ValidationError {
    name: string;
    constructor(message?: string);
}
export declare class AssetAlreadyRegisteredError extends ValidationError {
    name: string;
    constructor(message?: string);
}
export declare class AssetsRegisteredOutOfBoundsError extends ValidationError {
    readonly numberOfAsset: number;
    readonly maxRegisteredAssets: number;
    name: string;
    constructor(numberOfAsset: number, maxRegisteredAssets: number, message?: string);
}
export declare class AssetNotRegisteredError extends ValidationError {
    readonly asset: Address;
    name: string;
    constructor(asset: Address, message?: string);
}
export declare class FeeNotRegisteredError extends ValidationError {
    readonly fee: Address;
    name: string;
    constructor(fee: Address, message?: string);
}
