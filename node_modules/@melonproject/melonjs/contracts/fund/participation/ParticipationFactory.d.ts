import { Contract } from '../../../Contract';
import { Environment } from '../../../Environment';
import { Address } from '../../../Address';
import { Factory } from '../../factory/Factory';
import { ParticipationDeployArguments } from './Participation';
export declare class ParticipationFactory extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address): import("../../..").Deployment<ParticipationFactory>;
    /**
     * Creates a ParticipationFactory instance.
     *
     * @param from The sender address.
     * @param args The participation deploy arguments as [[ParticipationDeployArguments]].
     */
    createInstance(from: Address, deployArgs: ParticipationDeployArguments): import("../../..").Transaction<import("web3-core").TransactionReceipt>;
}
export interface ParticipationFactory extends Factory {
}
