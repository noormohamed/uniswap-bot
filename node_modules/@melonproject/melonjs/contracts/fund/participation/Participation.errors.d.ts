import BigNumber from 'bignumber.js';
import { Address } from '../../../Address';
import { ValidationError } from '../../../errors/ValidationError';
import { Request } from './Participation';
export declare class InvestmentAssetNotAllowedError extends ValidationError {
    readonly asset: Address;
    readonly name = "InvestmentAssetNotAllowedError";
    constructor(asset: Address, message?: string);
}
export declare class AssetIsNotRegisteredError extends ValidationError {
    readonly asset: Address;
    readonly name = "AssetIsNotRegisteredError";
    constructor(asset: Address, message?: string);
}
export declare class InvestmentRequestExistsError extends ValidationError {
    readonly request: Request;
    readonly name = "InvestmentRequestExistsError";
    constructor(request: Request, message?: string);
}
export declare class NoInvestmentRequestError extends ValidationError {
    readonly from: Address;
    readonly name = "NoInvestmentRequestError";
    constructor(from: Address, message?: string);
}
export declare class CancelConditionsNotMetError extends ValidationError {
    readonly from: Address;
    readonly name = "CancelConditionsNotMetError";
    constructor(from: Address, message?: string);
}
export declare class PriceNotValidError extends ValidationError {
    readonly asset: Address;
    readonly name = "PriceNotValidError";
    constructor(asset: Address, message?: string);
}
export declare class InvestmentAmountTooLowError extends ValidationError {
    readonly amount: BigNumber;
    readonly name = "InvestmentAmountTooLowError";
    constructor(amount: BigNumber, message?: string);
}
export declare class NoSharesToRedeemError extends ValidationError {
    readonly name = "NoSharesToRedeemError";
    constructor(message?: string);
}
export declare class NotEnoughSharesToRedeemError extends ValidationError {
    readonly availableShares: BigNumber;
    readonly name = "NotEnoughSharesToRedeemError";
    constructor(availableShares: BigNumber, message?: string);
}
export declare class InvestmentPolicyValidationError extends ValidationError {
    readonly signature: string;
    readonly name = "InvestmentPolicyValidationError";
    constructor(signature: string, message?: string);
}
