import { Contract } from '../../../Contract';
import { Environment } from '../../../Environment';
import { Address } from '../../../Address';
import { Spoke } from '../hub/Spoke';
import { StandardToken } from '../../dependencies/token/StandardToken';
export declare class Shares extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address, hub: Address): import("../../..").Deployment<Shares>;
    /**
     * Gets the name of the shares.
     *
     * @param block The block number to execute the call on.
     */
    getName(block?: number): Promise<string>;
    /**
     * Gets the symbol of the shares.
     *
     * @param block The block number to execute the call on.
     */
    getSymbol(block?: number): Promise<string>;
    /**
     * Gets the decimals of the shares.
     *
     * @param block The block number to execute the call on.
     */
    getDecimals(block?: number): Promise<number>;
}
export interface Shares extends Spoke, StandardToken {
}
