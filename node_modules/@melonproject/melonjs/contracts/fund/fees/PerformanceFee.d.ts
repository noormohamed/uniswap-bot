import { Environment } from '../../../Environment';
import { Address } from '../../../Address';
import { IFee } from './IFee';
export declare class PerformanceFee extends IFee {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address): import("../../..").Deployment<PerformanceFee>;
    /**
     * Gets the performance fee rate.
     *
     * @param address The address of the fee manager contract
     * @param block The block number to execute the call on.
     */
    getPerformanceFeeRate(address: Address, block?: number): Promise<import("bignumber.js").default>;
    /**
     * Gets the performance fee period.
     *
     * @param address The address of the fee manager contract
     * @param block The block number to execute the call on.
     */
    getPerformanceFeePeriod(address: Address, block?: number): Promise<number>;
    /**
     * Gets the current high water mark
     *
     * @param address The address of the fee manager contract
     * @param block The block number to execute the call on.
     */
    getHighWaterMark(address: Address, block?: number): Promise<import("bignumber.js").default>;
    /**
     * Gets the initialize time
     *
     * @param address The address of the fee manager contract
     * @param block The block number to execute the call on.
     */
    getInitializeTime(address: Address, block?: number): Promise<Date>;
    /**
     * Checks wether the performance fee can be updated
     *
     * @param address The address of the fee manager contract
     * @param block The block number to execute the call on.
     */
    canUpdate(address: Address, block?: number): Promise<boolean>;
    /**
     * Gets the divisor.
     *
     * @param block The block number to execute the call on.
     */
    getDivisor(block?: number): Promise<import("bignumber.js").default>;
}
