import { Address } from '../../../../Address';
import { Trading, ExchangeInfo } from '../Trading';
import { Contract } from '../../../../Contract';
import { Environment } from '../../../../Environment';
export declare class BaseTradingAdapter extends Contract {
    readonly environment: Environment;
    readonly adapterAddress: Address;
    readonly trading: Trading;
    readonly info: ExchangeInfo;
    readonly index: number;
    constructor(environment: Environment, adapterAddress: Address, trading: Trading, info: ExchangeInfo, index: number);
    static create<T extends typeof BaseTradingAdapter>(this: T, environment: Environment, adapterAddress: Address, trading: Trading): Promise<InstanceType<T>>;
}
