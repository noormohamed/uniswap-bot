import { Contract } from '../../../Contract';
import { Environment } from '../../../Environment';
import { Address } from '../../../Address';
import { Factory } from '../../factory/Factory';
export declare class VaultFactory extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address): import("../../..").Deployment<VaultFactory>;
    /**
     * Creates a Vault instance.
     *
     * @param from The sender address.
     * @param hub The hub address.
     */
    createInstance(from: Address, hub: Address): import("../../..").Transaction<import("web3-core").TransactionReceipt>;
}
export interface VaultFactory extends Factory {
}
