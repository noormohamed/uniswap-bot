import { Contract } from '../../../Contract';
import { IPolicy } from './IPolicy';
import { AddressList } from './AddressList';
import { Environment } from '../../../Environment';
import { Address } from '../../../Address';
export declare class AssetWhitelist extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    static deploy(environment: Environment, bytecode: string, from: Address, members: Address[]): import("../../..").Deployment<AssetWhitelist>;
    /**
     * Removes an asset from an AssetWhitelist.
     *
     * @param from The address of the sender
     * @param asset The asset address to be removed from the AssetWhitelist
     */
    removeFromWhitelist(from: Address, asset: Address): import("../../..").Transaction<import("web3-core").TransactionReceipt>;
    /**
     * Gets the index of an asset.
     *
     * @param asset The address of the asset
     * @param block The block number to execute the call on.
     */
    getAssetIndex(asset: Address, block?: number): Promise<number>;
}
export interface AssetWhitelist extends IPolicy, AddressList {
}
