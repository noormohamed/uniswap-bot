import { Contract } from '../../../Contract';
import BigNumber from 'bignumber.js';
import { Address } from '../../../Address';
export interface PolicyArgs {
    signature: string;
    addresses: [Address, Address, Address, Address, Address];
    values: [BigNumber, BigNumber, BigNumber];
    identifier: string;
}
export declare class IPolicy extends Contract {
    static readonly abi: import("web3-utils").AbiItem[];
    /**
     * Gets the identifier of a policy.
     *
     * @param block The block number to execute the call on.
     */
    getIdentifier(block?: number): Promise<string>;
    /**
     * Gets the position of a policy (0: pre, 1: post).
     *
     * @param block The block number to execute the call on.
     */
    getPosition(block?: number): Promise<number>;
    /**
     * Checks wheter a rule is true or false
     *
     * @param args The arguments for the rule
     * @param block The block number to execute the call on.
     */
    rule(args: PolicyArgs, block?: number): Promise<boolean>;
}
